@using ShoeStore.Domain.Entities;

@model IEnumerable<Category>

<div class="sidebar-categories">
    <div class="head">Browse Categories</div>
    <ul class="main-categories">
        @foreach (var item in Model)
        {
            if (item.SubCategories.Count(x=>x.CategoryId==item.CategoryId) != 0)
            {
                <li class="main-nav-list">
                    <a data-toggle="collapse" href="#@item.CategoryName.Replace(" ","_")" aria-expanded="false" aria-controls="@item.CategoryName.Replace(" ","_")">
                        <span class="lnr lnr-arrow-right"></span>@item.CategoryName<span class="number">@*@item.Products.Select(x => x.Quantity)*@</span>
                    </a>
                    <ul class="collapse" id="@item.CategoryName.Replace(" ","_")" data-toggle="collapse" aria-expanded="false" aria-controls="@item.CategoryName.Replace(" ","_")">
                        @foreach (var subs in item.SubCategories)
                        {
                            <li class="main-nav-list child"><a href="@Url.Action("Shop","Store",new {@selectedCategory=item.CategoryName, @selectedSubCategory=subs.Name })">@subs.Name<span class="number">@*  *@</span></a></li>
                        }
                    </ul>
                </li>
            }
            else
            {
                <li class="main-nav-list"><a href="@Url.Action("Shop", "Store",new {selectedCategory=item.CategoryName})">@item.CategoryName<span class="number">@*@item.Products.Count(x=>x.CategoryId==item.CategoryId)*@</span></a></li>
            }
        }
    </ul>
</div>
